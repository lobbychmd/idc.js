var mongoose = require('mongoose');
var tree_config = require('tree_config').metaTreeConfig;
var tree_types = require('tree_config').metaTreeTypes ;
var js_utils = require('js_utils').utils;

exports.suggest = function (term, max, project_name, metaType, callback) {
    var data = [];
    js_utils.each_exec(metaType ? [metaType] : tree_types,
        function (child, next) {
            if (tree_config[child].table) {
                var m = mongoose.model(tree_config[child].table);
                var query = { ProjectName: project_name };

                var term1 = '';
                for (var s in term) term1 += '[' + term[s].toUpperCase() + term[s].toLowerCase() + ']';

                if (typeof tree_config[child].text == "string")
                    query[tree_config[child].text] = eval('/' + term1 + '/');
                else query[tree_config[child].text[0]] = eval('/' + term1 + '/');
                //var searchfieldbycontext = child == "MetaField" && term.indexOf(' ' > 0);
                
                m.find(query, function (err, docs) {
                    for (var i in docs) {
                        data.push({ type: child, value: docs[i][
                            typeof tree_config[child].text == "string"?
                                tree_config[child].text: tree_config[child].text[0]] });
                        if (data.length == max) { callback(data); return; }
                    }
                    next();
                });
            } else next();
        },
        function () {
            callback(data);
            return;
        }, 0);
}

exports.search = function (term, max, project_name, callback) {
    var data = [];
    js_utils.each_exec(tree_types,
        function (child, next) {
            //console.log("search:" + child);
            if (tree_config[child].table) {
                var m = mongoose.model(tree_config[child].table);
                var query = { ProjectName: project_name };
                var terms = term.split(' ');
                
                for (var i in terms) {
                     
                    if (!terms[i] || (i >0 && child != "MetaField")) continue;

                    var term1 = '';
                    for (var s in terms[i]) term1 += '[' + terms[i][s].toUpperCase() + terms[i][s].toLowerCase() + ']';

                    query[i == 0 ? (
                        typeof tree_config[child].text == "string"?
                            tree_config[child].text: tree_config[child].text[0]) : tree_config[child].text[1]] = eval('/' + term1 + '/');
                }
                if (tree_config[child].table == "MetaField")
                    console.log(query);
                m.find(query, function (err, docs) {
                    for (var i in docs) { 
                        data.push({ type: child, data: docs[i], children: [] });
                        if (data.length == max) { callback(data); return; }
                    }
                    next();
                });
            } else next();
        },
        function () {
            callback(data);
            return;
        }, 0);
}

exports.searchbyid = function (type, id,  project_name, callback) {
    var m = mongoose.model(tree_config[type].table);
    var _id =require('mongodb').ObjectID(id);
     
    m.findById(id, function (err, doc) {
        callback([{ type: type, data: doc, children: [] }]);
    });
}