var mongoose = require('mongoose');

exports.saveLastState = function (account_id, project_name, state, callback) {
    var AccountProjectPref = mongoose.model("AccountProjectPref");
    var Account = mongoose.model("Account");
    Account.findOne({ _id: account_id }, function (e, account) {
        AccountProjectPref.findOne({ "Account": account._id, ProjectName: project_name }, function (err, doc) {
            if (!doc) {
                doc = new AccountProjectPref({ Account: account, ProjectName: project_name });
                doc.LastState = state;
                doc.save(function (err, numAffected) { 
                    callback(err ? err : numAffected);
                });
            } else {
                //找回来的 doc 是不可以改的
                AccountProjectPref.update({ _id: doc._id },
                    { "$set": { LastState: state } }, null, function (err, numAffected) {
                    callback(err?err:numAffected);
                });
                
            }
        })
    });
}

exports.getLastState = function (account_id, project_name, callback) {
    var AccountProjectPref = mongoose.model("AccountProjectPref");
    var Account = mongoose.model("Account");
    Account.findOne({ _id: account_id }, function (e, account) {
        AccountProjectPref.findOne({ "Account": account._id, ProjectName: project_name }, function (err, doc) {
            callback(err ? err : (doc? doc.LastState: null)); //必须定义了Schema 的属性才能读取
        })
    });
}


exports.getLastPosition = function (account_id, callback) {
    var AccountPref = mongoose.model("AccountPref");
    AccountPref.findOne({ "Account": account_id }, function (err, doc) {
        callback(err, doc ? doc.LastPosition : null);
    })
}

exports.saveLastPosition = function (account_id, position, callback) {
    var AccountPref = mongoose.model("AccountPref");
    var Account = mongoose.model("Account");
    Account.findOne({ _id: account_id }, function (e, account) {
        AccountPref.findOne({ "Account": account._id }, function (err, doc) {
            if (!doc) {
                doc = new AccountPref({ Account: account, LastPosition: position });
                doc.save(function (err, numAffected) {
                    callback(err ? err : numAffected);
                });
            } else {
                //找回来的 doc 是不可以改的
                AccountPref.update({ _id: doc._id },
                    { "$set": { LastPosition: position } }, null, function (err, numAffected) {
                        callback(err ? err : numAffected);
                    });

            }
        })
    });

}

var user_projects = function (_id, callback) {
    mongoose.model("Project").find(  {
                "$or": [
                { "Account": _id },
                { "Users": _id }]
            },
            function (err1, docs) {
                callback(docs);
            });
}

exports.user_projects = user_projects;

exports.user_projects_by_user_no = function (user_no, callback) {
    mongoose.model("Account").find({ UserNO: user_no }, function (err, doc) {
        //console.log(doc);
        if (true) //密码检查
        {
            if (doc) user_projects(doc._id, function (prjs) {
                callback(doc, prjs);
            });
            else callback(doc, []);
        } else callback(null, [])

    });
}

