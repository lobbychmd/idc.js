var utils = {
    each_exec: function (arraies, exec, callback, idx) {
        if (idx == arraies.length) callback();
        else {
            exec(arraies[idx], function () {
                utils.each_exec(arraies, exec, callback, idx + 1);
            });

        };
    },
    hashcode: function (str){  
        str=str+"";  
        var h = 0, off = 0;  
        var len = str.length;  
      
        for(var i = 0; i < len; i++){  
            h = 31 * h  + str.charCodeAt(off++);  
            if(h>0x7fffffff || h<0x80000000){  
                h=h & 0xffffffff;  
            }  
        }  
        return h;  
    },
    arrayFind: function (a, callback){
        for (var i in a) {
            if (callback(a[i])) return a[i];
        }
        return null;
    }
}

exports.utils = utils;

exports.hashcode = utils.hashcode;

exports.HashCode = function() {
     
    var serialize = function(object) {
        // Private
        var type, serializedCode = "";
         
        type = typeof object;
         
        if (type === 'object') {
            var element;
             
            for (element in object) {
                serializedCode += "[" + type + ":" + element + serialize(object[element]) + "]";
                }
             
            } else if (type === 'function') {
                serializedCode += "[" + type + ":" + object.toString() + "]";
                } else {
                    serializedCode += "[" + type + ":" + object+"]";
                    }
         
        return serializedCode.replace(/\s/g, "");
        };
     
    // Public, API
    return {
        value : function(object) {
            return MD5(serialize(object));
            }
    };
}();